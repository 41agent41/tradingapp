services:
  backend:
    build: ./backend
    env_file: .env
    environment:
      - PORT=${BACKEND_PORT:-4000}
      - NODE_ENV=${NODE_ENV:-production}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000}
    ports:
      - "${BACKEND_PORT:-4000}:${BACKEND_PORT:-4000}"
    volumes:
      - ./.env:/app/.env:ro
    depends_on:
      - postgres
      - redis
      - ib_service
    networks:
      - tradingapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT:-4000}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
  frontend:
    build: ./frontend
    env_file: .env
    environment:
      - PORT=${FRONTEND_PORT:-3000}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:4000}
      - NODE_ENV=${NODE_ENV:-production}
    ports:
      - "${FRONTEND_PORT:-3000}:${FRONTEND_PORT:-3000}"
    depends_on:
      - backend
    networks:
      - tradingapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${FRONTEND_PORT:-3000}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
  ib_service:
    build: ./ib_service
    env_file: .env
    environment:
      - IB_HOST=${IB_HOST:-localhost}
      - IB_PORT=${IB_PORT:-4002}
      - IB_CLIENT_ID=${IB_CLIENT_ID:-1}
      - IB_LOG_LEVEL=${IB_LOG_LEVEL:-INFO}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000}
    ports:
      - "${IB_SERVICE_PORT:-8000}:8000"
    networks:
      - tradingapp-network
    restart: unless-stopped
    # Allow connection to external IB Gateway (configurable)
    extra_hosts:
      - "${IB_HOST:-localhost}:127.0.0.1"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-tradingapp}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-tradingapp123}
      POSTGRES_DB: ${POSTGRES_DB:-tradingapp}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - tradingapp-network
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - tradingapp-network
volumes:
  pgdata:
networks:
  tradingapp-network:
    driver: bridge 